#Использовать annotations
#Использовать collectionos

Перем _Причина;             // Причина пропуска теста
Перем _ОперационнаяСистема; // Переданная операционная система

Перем ВозможныеОС; // Допустимые значения для указания операционной системы

// Аннотация для указания операционной системы, на которой не должен выполняться тест
//
// Параметры:
//  Значение - Строка - Операционная система, на которой не должен выполняться тест,
//   допустимо указывать только один из вариантов: `Windows`, `Linux`, `MacOS`
//  Причина  - Строка - Причина пропуска теста, которая будет указана в отчете о тестировании
//
// Пример:
//  1.
//  // Не выполнять на Windows
//  //
//  &Тест
//  &ВыключенНаОС("Windows", "Я и красноглазю")
//   
//  2.
//  // Не выполнять на Linux
//  //
//  &Тест
//  &ВыключенНаОС("Linux", "Сам красноглазь")
//   
//  3.
//  // Не выполнять на MacOS
//  //
//  &Тест
//  &ВыключенНаОС("MacOS", "Заплатите 9.99$ за выполнение теста")
//
&Аннотация("ВыключенНаОС")
&ВыключенЕсли(Значение = "")
Процедура ПриСозданииОбъекта(Значение, Причина = "Выключен в текущей операционной системе")

	_ОперационнаяСистема = Значение;
	_Причина             = Причина;

	ВозможныеОС = Списки.ИзЭлементов("Windows", "Linux", "MacOS");

	Если Не ВозможныеОС.Содержит(_ОперационнаяСистема) Тогда
		ВызватьИсключение "В аннотации ВыключенНаОС в качестве значения могут выступать только: " + ВозможныеОС;
	КонецЕсли;

КонецПроцедуры

Процедура ПриРазворачиванииАннотации(ОпределениеАннотации, ПодчиненныеАннотации, ВладелецСвойства, Свойство) Экспорт

	Аннотация = РаботаСАннотациями.НайтиАннотацию(ПодчиненныеАннотации, "ВыключенЕсли");
	РаботаСАннотациями.УстановитьЗначениеПараметраАннотации(Аннотация, "Причина", _Причина);

	Условие =
		"() ->
		|	ТекущаяОС = Новый СистемнаяИнформация().ТипПлатформы;
		|";

	Если _ОперационнаяСистема = "Windows" Тогда
		Условие = Условие + "Возврат ТекущаяОС = ТипПлатформы.Windows_x86 Или ТекущаяОС = ТипПлатформы.Windows_x86_64;"
	ИначеЕсли _ОперационнаяСистема = "Linux" Тогда
		Условие = Условие + "Возврат ТекущаяОС = ТипПлатформы.Linux_x86 Или ТекущаяОС = ТипПлатформы.Linux_x86_64;"
	Иначе
		Условие = Условие + "Возврат ТекущаяОС = ТипПлатформы.MacOS_x86 Или ТекущаяОС = ТипПлатформы.MacOS_x86_64;"
	КонецЕсли;

	РаботаСАннотациями.УстановитьЗначениеПараметраАннотации(
		Аннотация,
		"Значение",
		Условие
	);

КонецПроцедуры
