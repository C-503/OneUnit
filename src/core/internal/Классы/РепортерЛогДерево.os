#Использовать collectionos

Перем _Лог;
Перем _РепортерСтатистика;
Перем _КодировкиUTF;

Перем Префикс;
Перем ТекущийКонтейнер;

Процедура ВывестиТестПлан(ТестПлан) Экспорт

	ИсполнениеТестПланНачало(ТестПлан);

	Для каждого Набор Из ТестПлан.Дети() Цикл

		ИсполнениеТестНаборНачало(Набор);

		Для каждого Тест Из Набор.Дети() Цикл
			ВывестиТест(Тест);
		КонецЦикла;

		ИсполнениеТестНаборКонец(Набор, Неопределено);

	КонецЦикла;

КонецПроцедуры

Процедура ВывестиТест(Тест)

	ИсполнениеТестНачало(Тест);

	Для каждого ВложенныйТест Из Тест.Дети() Цикл
		ВывестиТест(ВложенныйТест);
	КонецЦикла;

	ИсполнениеТестКонец(Тест, Неопределено);

КонецПроцедуры

&ПодпискаНаСобытие("ИсполнениеТестПланНачало")
Процедура ИсполнениеТестПланНачало(ТестПлан) Экспорт

	Префикс          = Новый СписокМассив;
	ТекущийКонтейнер = ТестПлан;

КонецПроцедуры

&ПодпискаНаСобытие("ИсполнениеТестПланКонец")
Процедура ИсполнениеТестПланКонец(ТестПлан) Экспорт

	Префикс          = Неопределено;
	ТекущийКонтейнер = Неопределено;

КонецПроцедуры

&ПодпискаНаСобытие("ИсполнениеТестНаборНачало")
Процедура ИсполнениеТестНаборНачало(ТестНабор) Экспорт
	ВыводКонтейнера(ТестНабор);
КонецПроцедуры

&ПодпискаНаСобытие("ИсполнениеТестНаборКонец")
Процедура ИсполнениеТестНаборКонец(ТестНабор, Результат) Экспорт
	Префикс.Удалить(Префикс.Получить(Префикс.ВГраница()));
	ТекущийКонтейнер = ТестНабор.Родитель();
КонецПроцедуры

&ПодпискаНаСобытие("ИсполнениеТестНаборПропущен")
Процедура ИсполнениеТестНаборПропущен(ТестНабор, Причина) Экспорт

	ВыводКонтейнера(ТестНабор, Причина);

	Префикс.Удалить(Префикс.Получить(Префикс.ВГраница()));
	ТекущийКонтейнер = ТестНабор.Родитель();

КонецПроцедуры

&ПодпискаНаСобытие("ИсполнениеТестНачало")
Процедура ИсполнениеТестНачало(Тест) Экспорт
	Если Тест.ТипОпределения() = ТипыОпределенийТестов.Контейнер Тогда
		ВыводКонтейнера(Тест);
	КонецЕсли;
КонецПроцедуры

&ПодпискаНаСобытие("ИсполнениеТестКонец")
Процедура ИсполнениеТестКонец(Тест, Результат) Экспорт

	Если Тест.ТипОпределения() = ТипыОпределенийТестов.Контейнер Тогда

		Префикс.Удалить(Префикс.Получить(Префикс.ВГраница()));
		ТекущийКонтейнер = Тест.Родитель();

	Иначе

		ЭтоПоследний = ТекущийКонтейнер.Дети().Индекс(Тест) = ТекущийКонтейнер.Дети().ВГраница();

		Если ЭтоПоследний Тогда
			Префикс.Добавить("└─");
		Иначе
			Префикс.Добавить("├─");
		КонецЕсли;

		ТекущийКонтейнер = Тест;

		ВывестиВЛог(Результат);

		Префикс.Удалить(Префикс.Получить(Префикс.ВГраница()));

		ТекущийКонтейнер = Тест.Родитель();

	КонецЕсли;

КонецПроцедуры

&ПодпискаНаСобытие("ИсполнениеТестПропущен")
Процедура ИсполнениеТестПропущен(Тест, Причина) Экспорт

	ЭтоПоследний = ТекущийКонтейнер.Дети().Индекс(Тест) = ТекущийКонтейнер.Дети().ВГраница();

	Если ЭтоПоследний Тогда
		Префикс.Добавить("└─");
	Иначе
		Префикс.Добавить("├─");
	КонецЕсли;

	ТекущийКонтейнер = Тест;

	ВывестиВЛог(Причина);

	Префикс.Удалить(Префикс.Получить(Префикс.ВГраница()));

	ТекущийКонтейнер = Тест.Родитель();

КонецПроцедуры

Процедура ВыводКонтейнера(Контейнер, РезультатВыполнения = Неопределено) Экспорт

	ЭтоПоследний = ТекущийКонтейнер.Дети().Индекс(Контейнер) = ТекущийКонтейнер.Дети().ВГраница();

	Если ЭтоПоследний Тогда
		Префикс.Добавить("└─");
	Иначе
		Префикс.Добавить("├─");
	КонецЕсли;

	ТекущийКонтейнер = Контейнер;

	ВывестиВЛог(РезультатВыполнения);

	Если ЭтоПоследний Тогда
		Префикс.Установить(Префикс.ВГраница(), "    ");
	Иначе
		Префикс.Установить(Префикс.ВГраница(), "│   ");
	КонецЕсли;

КонецПроцедуры

Процедура ВывестиВЛог(РезультатВыполнения = Неопределено)

	Поля = Новый КартаСоответствие();
	Поля.Вставить("УровеньДерева", СтрСоединить(Префикс.ВМассив(), ""));
	Поля.Вставить("ИмяТеста",      ТекущийКонтейнер);

	Уровень = УровниЛога.Информация;

	Если ТипЗнч(РезультатВыполнения) = Тип("РезультатВыполненияТеста") Тогда

		Если РезультатВыполнения.Результат() = РезультатыВыполненияТестов.Ошибка Тогда
			Уровень = УровниЛога.Ошибка;
		КонецЕсли;

		Причины = РезультатВыполнения.ОписанияПричин();
		Если Не Причины.Пусто() Тогда
			Поля.Вставить("Причина", Причины);
		КонецЕсли;

		Статистика = _РепортерСтатистика.СтатистикаТеста(ТекущийКонтейнер);

		Поля.Вставить("Результат", РезультатДляВывода(РезультатВыполнения.Результат()));
		Поля.Вставить(
			"ВремяВыполнения",
			 Статистика.ПолучитьИлиУмолчание("ВремяЗавершения", 0) -
			 Статистика.ПолучитьИлиУмолчание("ВремяНачала", 0)
		);

	ИначеЕсли ТипЗнч(РезультатВыполнения) = Тип("Строка") Тогда
		Уровень = УровниЛога.Предупреждение;
		Поля.Вставить("Причина", РезультатВыполнения);
		Поля.Вставить("Результат", РезультатДляВывода(Неопределено));
	Иначе
		// no-op
	КонецЕсли;

	_Лог.ПоляИз(Поля.КлючиИЗначения())
		.Вывести("", Уровень);

КонецПроцедуры

Функция РезультатДляВывода(Результат)

	Если _КодировкиUTF.Содержит(Консоль.КодировкаВходногоПотока) Тогда
		Успех   = "✔";
		Ошибка  = "✘";
		Пропуск = "↷";
	Иначе
		Успех   = "V";
		Ошибка  = "X";
		Пропуск = "О";
	КонецЕсли;

	Если Результат = РезультатыВыполненияТестов.Успех Тогда
		Возврат Успех;
	ИначеЕсли Результат = РезультатыВыполненияТестов.Ошибка Тогда
		Возврат Ошибка;
	Иначе
		Возврат Пропуск;
	КонецЕсли;

КонецФункции

&Желудь
Процедура ПриСозданииОбъекта(
	&Лог("oscript.lib.oneunit.core") Лог,
	&Пластилин РепортерСтатистика)

	_Лог = Лог;

	_РепортерСтатистика = РепортерСтатистика;

	_КодировкиUTF = Списки.ИзЭлементов(
		КодировкаТекста.UTF8,
		КодировкаТекста.UTF8NoBOM,
		КодировкаТекста.UTF16
	);

КонецПроцедуры
