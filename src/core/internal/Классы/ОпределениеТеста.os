#Использовать collectionos

Перем _Тип;
Перем _Имя;
Перем _Дети;
Перем _Родитель;
Перем _ИмяМетода;
Перем _Параметры;
Перем _Таймаут;
Перем _Теги;
Перем _Условия;
Перем _Порядок;

Функция ТипОпределения() Экспорт
	Возврат _Тип;
КонецФункции

Функция Родитель() Экспорт
	Возврат _Родитель;
КонецФункции

Функция Дети() Экспорт
	Возврат Новый ФиксированныйСписок(_Дети);
КонецФункции

Функция Теги() Экспорт
	Возврат _Теги;
КонецФункции

Функция ИмяМетода() Экспорт
	Возврат _ИмяМетода;
КонецФункции

Функция Параметры() Экспорт
	Возврат _Параметры;
КонецФункции

Функция Имя() Экспорт
	Возврат _Имя;
КонецФункции

Функция ПолноеИмя() Экспорт
	Возврат Родитель().ПолноеИмя() + "." + Имя();
КонецФункции

Функция Путь() Экспорт
	Возврат Родитель().Путь();
КонецФункции

Функция Таймаут() Экспорт
	Возврат ?(ЗначениеЗаполнено(_Таймаут), _Таймаут, Родитель().Таймаут());
КонецФункции

Функция Условия() Экспорт
	Возврат _Условия;
КонецФункции

Функция Порядок() Экспорт
	Возврат _Порядок;
КонецФункции

Процедура ОбработкаПолученияПредставления(Представление, СтандартнаяОбработка) // BSLLS:UnusedLocalMethod-off
	СтандартнаяОбработка = Ложь;
	Представление = Имя();
КонецПроцедуры

&Желудь
&Характер("Компанейский")
Процедура ПриСозданииОбъекта(
	&Блестяшка Тип,
	&Блестяшка Имя,
	&Блестяшка Дети,
	&Блестяшка Родитель,
	&Блестяшка ИмяМетода,
	&Блестяшка Параметры,
	&Блестяшка Таймаут,
	&Блестяшка Теги,
	&Блестяшка Условия,
	&Блестяшка Порядок)

	_Тип               = Тип;
	_Имя               = Имя;
	_Дети              = Дети;
	_Родитель          = Родитель;
	_ИмяМетода         = ИмяМетода;
	_Параметры         = Списки.Скопировать(Параметры);
	_Таймаут           = Таймаут;
	_Теги              = Списки.Скопировать(Теги);
	_Условия           = Списки.Скопировать(Условия);
	_Порядок           = Порядок;

КонецПроцедуры
