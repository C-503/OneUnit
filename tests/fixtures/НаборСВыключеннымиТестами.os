#Использовать asserts
#Использовать semver

&Тест
&Выключен("На мне аннотация Выключен")
Процедура Выключен() Экспорт
	ВызватьИсключение "Я не должен был выполнится";
КонецПроцедуры

&Тест
&ВыключенЕсли("() -> Истина", Причина = "На мне аннотация ВыключенЕсли которая вернула истину")
Процедура ВыключенЕслиИстина() Экспорт
	ВызватьИсключение "Я не должен был выполнится";
КонецПроцедуры

&Тест
&ВыключенНаОС("Windows")
Процедура ВыключенНаОСWindows() Экспорт

	ТекущаяОС = Новый СистемнаяИнформация().ТипПлатформы;

	Ожидаем.Что(
		ТекущаяОС <> ТипПлатформы.Windows_x86 Или ТекущаяОС <> ТипПлатформы.Windows_x86_64,
		"Я не должен был выполнится на Windows"
	).ЭтоИстина();

КонецПроцедуры

&Тест
&ВыключенНаОС("Linux")
Процедура ВыключенНаОСLinux() Экспорт

	ТекущаяОС = Новый СистемнаяИнформация().ТипПлатформы;

	Ожидаем.Что(
		ТекущаяОС <> ТипПлатформы.Linux_x86 Или ТекущаяОС <> ТипПлатформы.Linux_x86_64,
		"Я не должен был выполнится на Linux"
	).ЭтоИстина();

КонецПроцедуры

&Тест
&ВыключенНаОС("MacOS")
Процедура ВыключенНаОСMacOS() Экспорт

	ТекущаяОС = Новый СистемнаяИнформация().ТипПлатформы;

	Ожидаем.Что(
		ТекущаяОС <> ТипПлатформы.MacOS_x86 Или ТекущаяОС <> ТипПлатформы.MacOS_x86_64,
		"Я не должен был выполнится на MacOS"
	).ЭтоИстина();

КонецПроцедуры

&Тест
&ВыключенДляOneScript("<2")
Процедура ВыключенДляOneScriptМладшеДвойки() Экспорт

	Ожидаем.Что(
		Версии.ВерсияБольшеИлиРавны(Новый СистемнаяИнформация().Версия, "2"),
		"Как вы меня вообще запустили в 1.х?"
	).ЭтоИстина();

КонецПроцедуры

&Тест
&ВыключенДляOneScript("~2.0")
Процедура ВыключенДляOneScriptСтаршеДвойки() Экспорт

	Ожидаем.Что(
		Версии.ВерсияБольше(Новый СистемнаяИнформация().Версия, "2.0"),
		"Я должен был заработать только в версии 2.1"
	).ЭтоИстина();

КонецПроцедуры

&Тест
&ВключенЕсли("() -> Ложь", Причина = "На мне аннотация ВключенЕсли которая вернула Ложь")
Процедура ВключенЕсли() Экспорт
	ВызватьИсключение "Я не должен был выполнится";
КонецПроцедуры

&Тест
&ВключенНаОС("Windows")
Процедура ВключенНаОСWindows() Экспорт

	ТекущаяОС = Новый СистемнаяИнформация().ТипПлатформы;

	Ожидаем.Что(
		ТекущаяОС = ТипПлатформы.Windows_x86 Или ТекущаяОС = ТипПлатформы.Windows_x86_64,
		"Я должен был выполнится только на Windows"
	).ЭтоИстина();

КонецПроцедуры

&Тест
&ВключенНаОС("Linux")
Процедура ВключенНаОСLinux() Экспорт

	ТекущаяОС = Новый СистемнаяИнформация().ТипПлатформы;

	Ожидаем.Что(
		ТекущаяОС = ТипПлатформы.Linux_x86 Или ТекущаяОС = ТипПлатформы.Linux_x86_64,
		"Я должен был выполнится только на Linux"
	).ЭтоИстина();

КонецПроцедуры

&Тест
&ВключенНаОС("MacOS")
Процедура ВключенНаОСMacOS() Экспорт

	ТекущаяОС = Новый СистемнаяИнформация().ТипПлатформы;

	Ожидаем.Что(
		ТекущаяОС = ТипПлатформы.MacOS_x86 Или ТекущаяОС = ТипПлатформы.MacOS_x86_64,
		"Я должен был выполнится только на MacOS"
	).ЭтоИстина();

КонецПроцедуры

&Тест
&ВключенДляOneScript("<2")
Процедура ВключенДляOneScriptМладшеДвойки() Экспорт
	ВызватьИсключение "Я не должен был выполнится никогда, т.к приложение не работает на версиях младше 2";
КонецПроцедуры

&Тест
&ВключенДляOneScript(">2.0")
Процедура ВключенДляOneScriptСтаршеДвойки() Экспорт

	Ожидаем.Что(
		Версии.ВерсияБольше(Новый СистемнаяИнформация().Версия, "2.0"),
		"Я должен был заработать только в версии 2.1"
	).ЭтоИстина();

КонецПроцедуры

&ТестовыйНабор
&Порядок(5)
Процедура ПриСозданииОбъекта()
КонецПроцедуры
